{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "insertIndKYCDocDetails",
    "fullyQualifiedName": "CNXQueryJSObject.insertIndKYCDocDetails",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "organizationId": "62a88de5cceab34ce0731531",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Official Use Only",
    "collectionId": "Official Use Only_CNXQueryJSObject",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n    const keyPersonData = await SelectKeyPersonData.run();\n\n    for (let i = 0; i < keyPersonData.length; i++) {\n      const kycData = await CNXQueryJSObject.getIndKYCDocData(\n        keyPersonData[i].OID,\n        keyPersonData[i].CUSTOMER_KEY_PERSON_ENTITY_TYPE\n      );\n\t\t\t\n      if (kycData && kycData.length) {\n          try{\n            kycData.forEach(async (data) => {\n                await InsertIndKYCDetails.run({\n                  customerOID: appsmith.store.customerOID,\n                  keyPersonID: data.keyPId,\n                  keyPersonType: data.keyPType,\n                  docType: data.docTypeCode,\n                  fileName: data.FileName,\n                  link: data.url,\n                });\n              });\n          } catch (e) {\n              return false;\n          }\n      }\n\t\t\treturn true;\n    };\n  }",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n    const keyPersonData = await SelectKeyPersonData.run();\n\n    for (let i = 0; i < keyPersonData.length; i++) {\n      const kycData = await CNXQueryJSObject.getIndKYCDocData(\n        keyPersonData[i].OID,\n        keyPersonData[i].CUSTOMER_KEY_PERSON_ENTITY_TYPE\n      );\n\t\t\t\n      if (kycData && kycData.length) {\n          try{\n            kycData.forEach(async (data) => {\n                await InsertIndKYCDetails.run({\n                  customerOID: appsmith.store.customerOID,\n                  keyPersonID: data.keyPId,\n                  keyPersonType: data.keyPType,\n                  docType: data.docTypeCode,\n                  fileName: data.FileName,\n                  link: data.url,\n                });\n              });\n          } catch (e) {\n              return false;\n          }\n      }\n\t\t\treturn true;\n    };\n  }"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Official Use Only_CNXQueryJSObject.insertIndKYCDocDetails",
  "deleted": false,
  "gitSyncId": "62861ecef4ee222f785ff32b_628d3deb72b49775ce4e8bd1"
}