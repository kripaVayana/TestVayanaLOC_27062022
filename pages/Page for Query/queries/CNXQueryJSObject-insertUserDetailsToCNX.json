{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "insertUserDetailsToCNX",
    "fullyQualifiedName": "CNXQueryJSObject.insertUserDetailsToCNX",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "organizationId": "62a88de5cceab34ce0731531",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Page for Query",
    "collectionId": "Page for Query_CNXQueryJSObject",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n    const userDetailData = await GetEntityAdministratorData.run();\n    if (userDetailData && userDetailData.length > 0) {\n      try {\n        userDetailData.forEach(async (user) => {\n          await InsertOTUserDetails.run({\n            arnNo: user.CUSTOMER_OID,\n            userId: user.CUSTOMER_KEY_PERSON_EMAIL.split(\"@\")[0],\n            userName: `${user.CUSTOMER_KEY_PERSON_FIRSTNAME} ${\n              user.CUSTOMER_KEY_PERSON_MIDDLENAME\n                ? `${user.CUSTOMER_KEY_PERSON_MIDDLENAME} `\n                : \"\"\n            }${user.CUSTOMER_KEY_PERSON_LASTNAME}`,\n            email: user.CUSTOMER_KEY_PERSON_EMAIL,\n            mobile: user.CUSTOMER_KEY_PERSON_MOBILE,\n            createdBy: user.CREATE_USER_OID,\n            createdDate: user.CREATE_DATE_TIME,\n            modifiedBy: user.LAST_UPDATE_USER_OID,\n            modifiedDate: user.LAST_UPDATE_DATE_TIME,\n          });\n        });\n      } catch (e) {\n          return false;\n      }\n    }\n    return true;\n  }",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n    const userDetailData = await GetEntityAdministratorData.run();\n    if (userDetailData && userDetailData.length > 0) {\n      try {\n        userDetailData.forEach(async (user) => {\n          await InsertOTUserDetails.run({\n            arnNo: user.CUSTOMER_OID,\n            userId: user.CUSTOMER_KEY_PERSON_EMAIL.split(\"@\")[0],\n            userName: `${user.CUSTOMER_KEY_PERSON_FIRSTNAME} ${\n              user.CUSTOMER_KEY_PERSON_MIDDLENAME\n                ? `${user.CUSTOMER_KEY_PERSON_MIDDLENAME} `\n                : \"\"\n            }${user.CUSTOMER_KEY_PERSON_LASTNAME}`,\n            email: user.CUSTOMER_KEY_PERSON_EMAIL,\n            mobile: user.CUSTOMER_KEY_PERSON_MOBILE,\n            createdBy: user.CREATE_USER_OID,\n            createdDate: user.CREATE_DATE_TIME,\n            modifiedBy: user.LAST_UPDATE_USER_OID,\n            modifiedDate: user.LAST_UPDATE_DATE_TIME,\n          });\n        });\n      } catch (e) {\n          return false;\n      }\n    }\n    return true;\n  }"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Page for Query_CNXQueryJSObject.insertUserDetailsToCNX",
  "deleted": false,
  "gitSyncId": "62861ecef4ee222f785ff32b_628f459572b49775ce4e8ce1"
}