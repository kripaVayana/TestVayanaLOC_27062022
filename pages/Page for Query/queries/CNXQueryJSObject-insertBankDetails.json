{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "insertBankDetails",
    "fullyQualifiedName": "CNXQueryJSObject.insertBankDetails",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "organizationId": "62a88de5cceab34ce0731531",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Page for Query",
    "collectionId": "Page for Query_CNXQueryJSObject",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n    const bankDetails = await SelectBankDetails.run();\n\t\t\n    if(bankDetails && bankDetails.length){\n        try {\n            for (let i = 0; i < bankDetails.length; i++) {\n                await InsertBankDetails.run({ data: bankDetails[i] });\n            }\n        } catch(e) {\n            return false;\n        }\n    }\n\t\treturn true;\n  }",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n    const bankDetails = await SelectBankDetails.run();\n\t\t\n    if(bankDetails && bankDetails.length){\n        try {\n            for (let i = 0; i < bankDetails.length; i++) {\n                await InsertBankDetails.run({ data: bankDetails[i] });\n            }\n        } catch(e) {\n            return false;\n        }\n    }\n\t\treturn true;\n  }"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Page for Query_CNXQueryJSObject.insertBankDetails",
  "deleted": false,
  "gitSyncId": "62861ecef4ee222f785ff32b_628f459972b49775ce4e8cfa"
}